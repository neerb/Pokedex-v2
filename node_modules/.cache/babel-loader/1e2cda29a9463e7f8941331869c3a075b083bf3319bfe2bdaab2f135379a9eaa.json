{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thorp\\\\Desktop\\\\web-dev\\\\pokedexreact\\\\pokedex-react\\\\src\\\\components\\\\damagerelation.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from \"react\";\nimport \"./damagerelation.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst convertColor = c => {\n  if (c === \"normal\") {\n    return \"#A8A878\";\n  } else if (c === \"fighting\") {\n    return \"#C03028\";\n  } else if (c === \"flying\") {\n    return \"#A890F0\";\n  } else if (c === \"poison\") {\n    return \"#A040A0\";\n  } else if (c === \"ground\") {\n    return \"#E0C068\";\n  } else if (c === \"rock\") {\n    return \"#B8A038\";\n  } else if (c === \"bug\") {\n    return \"#A8B820\";\n  } else if (c === \"ghost\") {\n    return \"#705898\";\n  } else if (c === \"steel\") {\n    return \"#B8B8D0\";\n  } else if (c === \"fire\") {\n    return \"#F08030\";\n  } else if (c === \"water\") {\n    return \"#6890F0\";\n  } else if (c === \"grass\") {\n    return \"#78C850\";\n  } else if (c === \"electric\") {\n    return \"#F8D030\";\n  } else if (c === \"psychic\") {\n    return \"#F85888\";\n  } else if (c === \"ice\") {\n    return \"#98D8D8\";\n  } else if (c === \"dragon\") {\n    return \"#7038F8\";\n  } else if (c === \"dark\") {\n    return \"#705848\";\n  } else if (c === \"fairy\") {\n    return \"#EE99AC\";\n  } else if (c === \"???\") {\n    return \"#68A090\";\n  }\n};\nconst DamageRelation = props => {\n  _s();\n  const [typeArray, setTypeArray] = useState([]);\n  const [damageRelationInfo, setDamageRelationInfo] = useState();\n  useEffect(() => {\n    setDamageRelationInfo(props.damageInfo);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"f-button-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"f-button\",\n      style: {\n        backgroundColor: convertColor(props.label),\n        border: calcBorderColor(props.label)\n      },\n      onClick: onToggle,\n      children: [toggled ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('./images/checkmark.png'),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), props.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(DamageRelation, \"v8G8qnCwsH/mH8XX8vCOBkaXd5U=\");\n_c = DamageRelation;\nexport default DamageRelation;\nvar _c;\n$RefreshReg$(_c, \"DamageRelation\");","map":{"version":3,"names":["React","Component","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","convertColor","c","DamageRelation","props","_s","typeArray","setTypeArray","damageRelationInfo","setDamageRelationInfo","damageInfo","className","children","style","backgroundColor","label","border","calcBorderColor","onClick","onToggle","toggled","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thorp/Desktop/web-dev/pokedexreact/pokedex-react/src/components/damagerelation.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./damagerelation.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst convertColor = c => {\r\n    if (c === \"normal\") {\r\n        return \"#A8A878\";\r\n    } else if (c === \"fighting\") {\r\n        return \"#C03028\";\r\n    } else if (c === \"flying\") {\r\n        return \"#A890F0\";\r\n    } else if (c === \"poison\") {\r\n        return \"#A040A0\";\r\n    } else if (c === \"ground\") {\r\n        return \"#E0C068\";\r\n    } else if (c === \"rock\") {\r\n        return \"#B8A038\";\r\n    } else if (c === \"bug\") {\r\n        return \"#A8B820\";\r\n    } else if (c === \"ghost\") {\r\n        return \"#705898\";\r\n    } else if (c === \"steel\") {\r\n        return \"#B8B8D0\";\r\n    } else if (c === \"fire\") {\r\n        return \"#F08030\";\r\n    } else if (c === \"water\") {\r\n        return \"#6890F0\";\r\n    } else if (c === \"grass\") {\r\n        return \"#78C850\";\r\n    } else if (c === \"electric\") {\r\n        return \"#F8D030\";\r\n    } else if (c === \"psychic\") {\r\n        return \"#F85888\";\r\n    } else if (c === \"ice\") {\r\n        return \"#98D8D8\";\r\n    } else if (c === \"dragon\") {\r\n        return \"#7038F8\";\r\n    } else if (c === \"dark\") {\r\n        return \"#705848\";\r\n    } else if (c === \"fairy\") {\r\n        return \"#EE99AC\";\r\n    } else if (c === \"???\") {\r\n        return \"#68A090\";\r\n    }\r\n};\r\n\r\n\r\nconst DamageRelation = (props) => {\r\n\r\n    const [typeArray, setTypeArray] = useState([]);\r\n    const [damageRelationInfo, setDamageRelationInfo] = useState();\r\n\r\n    useEffect(() => {\r\n        setDamageRelationInfo(props.damageInfo);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"f-button-wrapper\">\r\n            <button className=\"f-button\" style={{ backgroundColor: convertColor(props.label), border: calcBorderColor(props.label) }} onClick={onToggle}>\r\n                {toggled ? <img src={require('./images/checkmark.png')} alt=''></img> : <></>}\r\n                {props.label}\r\n            </button>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default DamageRelation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}