{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thorp\\\\Desktop\\\\web-dev\\\\pokedexreact\\\\pokedex-react\\\\src\\\\components\\\\evolutionchain.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './evolutionchain.css';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PokemonCard from './pokemon-card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = props => {\n  _s();\n  // const [chainInfo, setChainInfo] = useState();\n  const [evolutionNames, setEvolutionNames] = useState([]);\n  const [evolutionInfo, setEvolutionInfo] = useState([]);\n  const urlBase = \"https://pokeapi.co/api/v2/pokemon/\";\n  useEffect(() => {\n    axios.get(props.chainUrl).then(result => {\n      // setChainInfo(result.data);\n      console.log(result.data);\n      getEvolutionNames(result.data);\n    });\n  }, []);\n  const getEvolutionNames = chainInfo => {\n    let sortArray = [...chainInfo];\n    filteredArray = filteredArray.sort((a, b) => a.id > b.id ? 1 : -1).filter(e => e.name.includes(searchValue) || e.id.toString().includes(searchValue));\n\n    //filteredArray = [...filteredArray, ...([...pokemonDataList].filter(e => filterFunction(e, f, filteredArray)))];\n    console.log(\"Evolutions:\");\n    // Add base evolution\n    setEvolutionNames(current => [...current, chainInfo.chain.species.name]);\n    axios.get(urlBase + chainInfo.chain.species.name).then(result => {\n      console.log(result.data);\n      setEvolutionInfo(current => [...current, result.data]);\n    });\n    console.log(chainInfo.chain.species.name);\n    if (chainInfo.chain.evolves_to.length > 0) {\n      let currentEvolvesTo = chainInfo.chain.evolves_to;\n      while (currentEvolvesTo.length > 0) {\n        setEvolutionNames(current => [...current, currentEvolvesTo[0].species.name]);\n        axios.get(urlBase + currentEvolvesTo[0].species.name).then(result => {\n          console.log(result.data);\n          setEvolutionInfo(current => [...current, result.data]);\n        });\n        console.log(currentEvolvesTo[0].species.name);\n        currentEvolvesTo = currentEvolvesTo[0].evolves_to;\n      }\n    }\n    console.log(evolutionInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"evolutions\",\n    children: evolutionInfo ? evolutionInfo.map(p => /*#__PURE__*/_jsxDEV(PokemonCard, {\n      className: \"evo-item\",\n      imageUrl: p.sprites.front_default,\n      name: p.name,\n      information: p,\n      setPokeinformation: props.setPokemon,\n      isEvo: true\n    }, p.id + p.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 53\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(EvolutionChain, \"HLZdpb4UWEyU4EwjEIHEOlVUsD4=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","axios","useEffect","useState","PokemonCard","jsxDEV","_jsxDEV","Fragment","_Fragment","EvolutionChain","props","_s","evolutionNames","setEvolutionNames","evolutionInfo","setEvolutionInfo","urlBase","get","chainUrl","then","result","console","log","data","getEvolutionNames","chainInfo","sortArray","filteredArray","sort","a","b","id","filter","e","name","includes","searchValue","toString","current","chain","species","evolves_to","length","currentEvolvesTo","className","children","map","p","imageUrl","sprites","front_default","information","setPokeinformation","setPokemon","isEvo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thorp/Desktop/web-dev/pokedexreact/pokedex-react/src/components/evolutionchain.js"],"sourcesContent":["import React from 'react'\r\nimport './evolutionchain.css'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport PokemonCard from './pokemon-card'\r\n\r\nconst EvolutionChain = (props) => {\r\n    // const [chainInfo, setChainInfo] = useState();\r\n    const [evolutionNames, setEvolutionNames] = useState([]);\r\n    const [evolutionInfo, setEvolutionInfo] = useState([]);\r\n    const urlBase = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\n    useEffect(() => {\r\n        axios.get(props.chainUrl)\r\n            .then((result) => {\r\n                // setChainInfo(result.data);\r\n                console.log(result.data);\r\n                getEvolutionNames(result.data);\r\n            })\r\n\r\n    }, []);\r\n\r\n    const getEvolutionNames = (chainInfo) => {\r\n\r\n        let sortArray = [...chainInfo];\r\n        filteredArray = filteredArray.sort((a, b) => a.id > b.id ? 1 : -1).filter(e => e.name.includes(searchValue) || e.id.toString().includes(searchValue));\r\n\r\n        //filteredArray = [...filteredArray, ...([...pokemonDataList].filter(e => filterFunction(e, f, filteredArray)))];\r\n        console.log(\"Evolutions:\");\r\n        // Add base evolution\r\n        setEvolutionNames(current => [...current, chainInfo.chain.species.name]);\r\n\r\n        axios.get(urlBase + chainInfo.chain.species.name)\r\n            .then((result) => {\r\n                console.log(result.data)\r\n                setEvolutionInfo(current => [...current, result.data]);\r\n            })\r\n        console.log(chainInfo.chain.species.name);\r\n\r\n        if (chainInfo.chain.evolves_to.length > 0) {\r\n            let currentEvolvesTo = chainInfo.chain.evolves_to;\r\n\r\n            while (currentEvolvesTo.length > 0) {\r\n                setEvolutionNames(current => [...current, currentEvolvesTo[0].species.name]);\r\n                axios.get(urlBase + currentEvolvesTo[0].species.name)\r\n                    .then((result) => {\r\n                        console.log(result.data)\r\n                        setEvolutionInfo(current => [...current, result.data]);\r\n                    })\r\n                console.log(currentEvolvesTo[0].species.name);\r\n                currentEvolvesTo = currentEvolvesTo[0].evolves_to;\r\n            }\r\n        }\r\n\r\n        console.log(evolutionInfo);\r\n    }\r\n\r\n    return (\r\n        <div className='evolutions'>\r\n            {evolutionInfo ? evolutionInfo.map(p => <PokemonCard\r\n                className=\"evo-item\"\r\n                imageUrl={p.sprites.front_default}\r\n                name={p.name}\r\n                information={p}\r\n                key={p.id + p.name}\r\n                setPokeinformation={props.setPokemon}\r\n                isEvo={true}\r\n            ></PokemonCard>) : (<></>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EvolutionChain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}