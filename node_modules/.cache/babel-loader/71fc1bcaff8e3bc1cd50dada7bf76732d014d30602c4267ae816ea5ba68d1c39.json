{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thorp\\\\Desktop\\\\web-dev\\\\pokedexreact\\\\pokedex-react\\\\src\\\\components\\\\evolutionchain.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './evolutionchain.css';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PokemonCard from './pokemon-card';\nimport { AiFillCaretRight } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = props => {\n  _s();\n  // const [chainInfo, setChainInfo] = useState();\n  const [evolutionNames, setEvolutionNames] = useState([]);\n  const [evolutionInfo, setEvolutionInfo] = useState([]);\n  const urlBase = \"https://pokeapi.co/api/v2/pokemon/\";\n  useEffect(() => {\n    axios.get(props.chainUrl).then(result => {\n      // setChainInfo(result.data);\n      // console.log(result.data);\n      getEvolutionNames(result.data);\n    });\n  }, []);\n  const getEvolutionNames = chainInfo => {\n    //filteredArray = [...filteredArray, ...([...pokemonDataList].filter(e => filterFunction(e, f, filteredArray)))];\n    // console.log(\"Evolutions:\");\n    // Add base evolution\n    setEvolutionNames(current => [...current, chainInfo.chain.species.name]);\n    axios.get(urlBase + chainInfo.chain.species.name).then(result => {\n      // console.log(result.data)\n      setEvolutionInfo(current => [...current, result.data]);\n    });\n    // console.log(chainInfo.chain.species.name);\n\n    if (chainInfo.chain.evolves_to.length > 0) {\n      let currentEvolvesTo = chainInfo.chain.evolves_to;\n      while (currentEvolvesTo.length > 0) {\n        setEvolutionNames(current => [...current, currentEvolvesTo[0].species.name]);\n        axios.get(urlBase + currentEvolvesTo[0].species.name).then(result => {\n          // console.log(result.data)\n          setEvolutionInfo(current => [...current, result.data]);\n        });\n        // console.log(currentEvolvesTo[0].species.name);\n        currentEvolvesTo = currentEvolvesTo[0].evolves_to;\n      }\n    }\n\n    // let sortArray = [...evolutionInfo].sort((a, b) => a.id < b.id ? 1 : -1);\n    // setEvolutionInfo(sortArray);\n\n    // console.log(evolutionInfo);\n  };\n\n  const returnEvoItem = p => {\n    count++;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [count > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"between\",\n        children: /*#__PURE__*/_jsxDEV(AiFillCaretRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"evo-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: p.sprites.front_default,\n          alt: p.name,\n          className: \"evo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"evo-name\",\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, p.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  };\n  let count = -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"evolutions\",\n    children: evolutionInfo ? evolutionInfo.map(p => returnEvoItem(p)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(EvolutionChain, \"HLZdpb4UWEyU4EwjEIHEOlVUsD4=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","axios","useEffect","useState","PokemonCard","AiFillCaretRight","jsxDEV","_jsxDEV","Fragment","_Fragment","EvolutionChain","props","_s","evolutionNames","setEvolutionNames","evolutionInfo","setEvolutionInfo","urlBase","get","chainUrl","then","result","getEvolutionNames","data","chainInfo","current","chain","species","name","evolves_to","length","currentEvolvesTo","returnEvoItem","p","count","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","sprites","front_default","alt","map","_c","$RefreshReg$"],"sources":["C:/Users/thorp/Desktop/web-dev/pokedexreact/pokedex-react/src/components/evolutionchain.js"],"sourcesContent":["import React from 'react'\r\nimport './evolutionchain.css'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport PokemonCard from './pokemon-card'\r\nimport { AiFillCaretRight } from 'react-icons/ai'\r\n\r\n\r\nconst EvolutionChain = (props) => {\r\n    // const [chainInfo, setChainInfo] = useState();\r\n    const [evolutionNames, setEvolutionNames] = useState([]);\r\n    const [evolutionInfo, setEvolutionInfo] = useState([]);\r\n    const urlBase = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\n    useEffect(() => {\r\n        axios.get(props.chainUrl)\r\n            .then((result) => {\r\n                // setChainInfo(result.data);\r\n                // console.log(result.data);\r\n                getEvolutionNames(result.data);\r\n            })\r\n\r\n    }, []);\r\n\r\n    const getEvolutionNames = (chainInfo) => {\r\n        //filteredArray = [...filteredArray, ...([...pokemonDataList].filter(e => filterFunction(e, f, filteredArray)))];\r\n        // console.log(\"Evolutions:\");\r\n        // Add base evolution\r\n        setEvolutionNames(current => [...current, chainInfo.chain.species.name]);\r\n\r\n        axios.get(urlBase + chainInfo.chain.species.name)\r\n            .then((result) => {\r\n                // console.log(result.data)\r\n                setEvolutionInfo(current => [...current, result.data]);\r\n            })\r\n        // console.log(chainInfo.chain.species.name);\r\n\r\n        if (chainInfo.chain.evolves_to.length > 0) {\r\n            let currentEvolvesTo = chainInfo.chain.evolves_to;\r\n\r\n            while (currentEvolvesTo.length > 0) {\r\n                setEvolutionNames(current => [...current, currentEvolvesTo[0].species.name]);\r\n                axios.get(urlBase + currentEvolvesTo[0].species.name)\r\n                    .then((result) => {\r\n                        // console.log(result.data)\r\n                        setEvolutionInfo(current => [...current, result.data]);\r\n                    })\r\n                // console.log(currentEvolvesTo[0].species.name);\r\n                currentEvolvesTo = currentEvolvesTo[0].evolves_to;\r\n            }\r\n        }\r\n\r\n        // let sortArray = [...evolutionInfo].sort((a, b) => a.id < b.id ? 1 : -1);\r\n        // setEvolutionInfo(sortArray);\r\n\r\n        // console.log(evolutionInfo);\r\n    }\r\n\r\n    const returnEvoItem = (p) => {\r\n\r\n        count++;\r\n        return (\r\n            <React.Fragment key={p.name}>\r\n                {count > 0 ?\r\n                    <div className='between'>\r\n                        <AiFillCaretRight />\r\n                    </div>\r\n                    : (<></>)}\r\n\r\n                <div className=\"evo-item\">\r\n                    <img\r\n                        src={p.sprites.front_default}\r\n                        alt={p.name}\r\n                        className=\"evo-image\"\r\n                    />\r\n                    <label className=\"evo-name\">{p.name}</label>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    let count = -1;\r\n\r\n    return (\r\n        <div className='evolutions'>\r\n            {/* {evolutionInfo ? evolutionInfo.map(p => <PokemonCard\r\n                className=\"evo-item\"\r\n                imageUrl={p.sprites.front_default}\r\n                name={p.name}\r\n                information={p}\r\n                key={p.id + p.name}\r\n                setPokeinformation={props.setPokemon}\r\n                isEvo={true}\r\n            ></PokemonCard>) : (<></>)} */}\r\n\r\n            {evolutionInfo ? evolutionInfo.map(p =>\r\n                (returnEvoItem(p))) : (<></>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EvolutionChain;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}