{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thorp\\\\Desktop\\\\web-dev\\\\pokedexreact\\\\pokedex-react\\\\src\\\\components\\\\pokemoninformation.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from \"react\";\nimport \"./pokemoninformationstyles.css\";\nimport MoveCard from \"./movecard.js\";\nimport LoadingScreen from \"./loadingscreen\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fade } from \"react-reveal\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport StatBar from \"./statbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst capitalize = s => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\nconst convertColor = c => {\n  if (c === \"normal\") {\n    return \"#A8A878\";\n  } else if (c === \"fighting\") {\n    return \"#C03028\";\n  } else if (c === \"flying\") {\n    return \"#A890F0\";\n  } else if (c === \"poison\") {\n    return \"#A040A0\";\n  } else if (c === \"ground\") {\n    return \"#E0C068\";\n  } else if (c === \"rock\") {\n    return \"#B8A038\";\n  } else if (c === \"bug\") {\n    return \"#A8B820\";\n  } else if (c === \"ghost\") {\n    return \"#705898\";\n  } else if (c === \"steel\") {\n    return \"#B8B8D0\";\n  } else if (c === \"fire\") {\n    return \"#F08030\";\n  } else if (c === \"water\") {\n    return \"#6890F0\";\n  } else if (c === \"grass\") {\n    return \"#78C850\";\n  } else if (c === \"electric\") {\n    return \"#F8D030\";\n  } else if (c === \"psychic\") {\n    return \"#F85888\";\n  } else if (c === \"ice\") {\n    return \"#98D8D8\";\n  } else if (c === \"dragon\") {\n    return \"#7038F8\";\n  } else if (c === \"dark\") {\n    return \"#705848\";\n  } else if (c === \"fairy\") {\n    return \"#EE99AC\";\n  } else if (c === \"???\") {\n    return \"#68A090\";\n  }\n};\nconst hectogramsToPounds = s => {\n  return (s / 10.0).toFixed(2);\n};\nconst decimetersToCentimeters = s => {\n  return s * 10.0;\n};\n\n// function NavToPrev(props) {\n//   let history = useHistory();\n\n//   function handleClick() {\n//     let n = props.currentNum - 1;\n\n//     if (n > 0) {\n//       history.push(\"/pokeinfo/\" + n);\n//       window.location.reload();\n//     }\n//   }\n\n//   return (\n//     <button\n//       className=\"previous-btn\"\n//       type=\"submit\"\n//       onClick={handleClick}\n//     ></button>\n//   );\n// }\n\n// function NavToNext(props) {\n//   let history = useHistory();\n\n//   function handleClick() {\n//     history.push(\"/pokeinfo/\" + (props.currentNum + 1));\n//     window.location.reload();\n//   }\n\n//   return (\n//     <button className=\"next-btn\" type=\"submit\" onClick={handleClick}></button>\n//   );\n// }\n\nconst PokemonInformation = props => {\n  _s();\n  // console.log(this.props.match.params);\n\n  // this.state = {\n  //   searchedName: this.props.match.params.name,\n  //   name: null,\n  //   idnum: null,\n  //   moves: null,\n  //   abilities: null,\n  //   description: null,\n  //   genus: null,\n  //   color: null,\n  //   allinformation: null,\n  //   isLoaded: false,\n  //   error: false\n  // };\n\n  const [initialInformation, setInitialInformation] = useState(props.setPokeinformation);\n  const [information, setInformation] = useState();\n  const [sprites, setSprites] = useState([]);\n  const [spritesPos, setSpritesPos] = useState(0);\n  const [currentSprite, setCurrentSprite] = useState(null);\n  const [pokemonName, setPokemonName] = useState(props.pokemonName);\n  const [idNum, setIdNum] = useState();\n  const [moves, setMoves] = useState();\n  const [abilities, setAbilities] = useState();\n  const [description, setDescription] = useState();\n  const [genus, setGenus] = useState();\n  const [color, setColor] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + props.setPokeinformation.name).then(res => res.json()).then(result => {\n      if (result) fetch(result.species.url).then(res => res.json()).then(result => {\n        setInformation(result);\n        console.log(result);\n        console.log(initialInformation);\n        {\n          // let flavorTextArray = result.flavor_text_entries;\n          // let n = 0;\n\n          // while (flavorTextArray[n].language.name !== \"en\") {\n          //   n++;\n          // }\n\n          // if (flavorTextArray[n].language.name === \"en\") {\n          //   setDescription(flavorTextArray[n].flavor_text);\n          // }\n\n          // let generaArray = result.genera;\n          // n = 0;\n\n          // while (generaArray[n].language.name !== \"en\") {\n          //   n++;\n          // }\n\n          // if (generaArray[n].language.name === \"en\") {\n          //   setGenus(generaArray[n].genus);\n          // }\n\n          // if (\n          //   result.color.name === \"white\" ||\n          //   result.color.name == \"yellow\"\n          // ) {\n          //   let types = information.types;\n\n          //   if (types.length >= 1) {\n          //     setColor(convertColor(types[0].type.name));\n          //   } else {\n          //     setColor(\"gray\");\n          //   }\n          // } else {\n          //   setColor(result.color.name);\n          // }\n        }\n      });\n    });\n    setSprites([initialInformation.sprites.front_default, initialInformation.sprites.back_default, initialInformation.sprites.front_shiny, initialInformation.sprites.back_shiny].filter(e => e));\n    setCurrentSprite(initialInformation.sprites.front_default);\n    setIsLoaded(true);\n  }, []);\n\n  // const navToPrevious = () => {\n  //   if (parseInt(information.id, 10) - 1 > 0) {\n  //     /*\n  //     window.location.href =\n  //       \"/pokedex-react/#/pokeinfo/\" +\n  //       (parseInt(information.id, 10) - 1);\n  //     window.location.reload();\n  //     */\n  //   }\n  // }\n\n  // const navToNext = () => {\n  //   window.location.href =\n  //     \"/#/pokeinfo/\" + (parseInt(information.id, 10) + 1);\n  // }\n\n  const returnToPokedex = () => {\n    props.closeFunction();\n  };\n  const returnAbilityString = () => {\n    let abilities = information.abilities;\n    console.log(abilities);\n    if (abilities.length === 2) {\n      return capitalize(abilities[0].ability.name) + \", \" + capitalize(abilities[1].ability.name);\n    } else if (abilities.length === 1) {\n      return capitalize(abilities[0].ability.name);\n    } else {\n      return \"N/A\";\n    }\n  };\n  const returnPokeTypes = () => {\n    if (information) {\n      // if (information.)\n    }\n  };\n  const navigateLeft = () => {\n    if (spritesPos - 1 < 0) {\n      setCurrentSprite(sprites[sprites.length - 1]);\n      setSpritesPos(sprites.length - 1);\n    } else {\n      setCurrentSprite(sprites[spritesPos - 1]);\n      setSpritesPos(spritesPos - 1);\n    }\n  };\n  const navigateRight = () => {\n    if (spritesPos + 1 > sprites.length - 1) {\n      setCurrentSprite(sprites[0]);\n      setSpritesPos(0);\n    } else {\n      setCurrentSprite(sprites[spritesPos + 1]);\n      setSpritesPos(spritesPos + 1);\n    }\n  };\n\n  // const returnTypeBoxes = () => {\n  //   let types = information.types;\n\n  //   if (types.length === 2) {\n  //     var orientation = \"to left\";\n  //     var colorOne = convertColor(types[0].type.name);\n  //     var colorTwo = convertColor(types[1].type.name);\n\n  //     return (\n  //       <React.Fragment>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorOne,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[0].type.name}\n  //         </span>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorTwo,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[1].type.name}\n  //         </span>\n  //       </React.Fragment>\n  //     );\n  //   } else if (types.length === 1) {\n  //     var colorOne = convertColor(types[0].type.name);\n  //     return (\n  //       <React.Fragment>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorOne,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[0].type.name}\n  //         </span>\n  //       </React.Fragment>\n  //     );\n  //   } else {\n  //     return <span style={{ backgroundColor: convertColor(\"???\") }}>???</span>;\n  //   }\n  // }\n\n  // // const displayPrevButton = () => {\n  // //   if (idNum > 1) {\n  // //     return <NavToPrev currentNum={idNum}></NavToPrev>;\n  // //   } else {\n  // //     return null;\n  // //   }\n  // // }\n\n  // const displayPokemonSprites = () => {\n  //   if (information.sprites.front_shiny != null) {\n  //     return (\n  //       <div className=\"sprites\">\n  //         <div className=\"two-sprites\">\n  //           <div>\n  //             {\" \"}\n  //             <strong>Normal</strong>\n  //           </div>\n  //           <img src={information.sprites.front_default}></img>\n  //           <img src={information.sprites.back_default}></img>\n  //         </div>\n\n  //         <div className=\"two-sprites\">\n  //           <div>\n  //             <strong>Shiny</strong>\n  //           </div>\n  //           <img src={information.sprites.front_shiny}></img>\n  //           <img src={information.sprites.back_shiny}></img>\n  //         </div>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div className=\"sprites\">\n  //         <div className=\"one-sprite\">\n  //           <img src={information.sprites.front_default}></img>\n  //           <img src={information.sprites.back_default}></img>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n  // let showInformation = () => {\n\n  //   if (information) {\n  //     const allInformation = information;\n\n  //     console.log(allInformation.types);\n\n  //     let types = allInformation.types;\n  //     const bground = document.getElementById(\"pokemon-information-background\");\n\n  //     if (types.length === 2) {\n  //       var orientation = \"to left\";\n  //       var colorOne = convertColor(types[0].type.name);\n  //       var colorTwo = convertColor(types[1].type.name);\n\n  //       if (bground !== null) {\n  //         bground.style.background =\n  //           \"linear-gradient(\" +\n  //           orientation +\n  //           \", \" +\n  //           colorOne +\n  //           \", \" +\n  //           colorTwo +\n  //           \")\";\n  //       }\n  //     } else if (types.length === 1) {\n  //       if (bground !== null) {\n  //         bground.style.background = convertColor(\n  //           allInformation.types[0].type.name\n  //         );\n  //       }\n  //     } else {\n  //       if (bground !== null) {\n  //         bground.style.background = convertColor(\"???\");\n  //       }\n  //     }\n\n  //     if (isLoaded === true/* && error === false*/) {\n  //       return (<div className=\"pokeinfo\">\n  //         <div className=\"pokemon-idnum\">\n  //           <span>#{idNum}</span>\n  //         </div>\n  //         <div className=\"info-box\">\n  //           <div className=\"typeandstat-info\">\n  //             <div className=\"types\">{this.returnTypeBoxes()}</div>\n  //           </div>\n\n  //           {this.displayPokemonSprites()}\n  //         </div>\n  //         <div className=\"short-description\">\n  //           <div className=\"genus-text\">{genus}</div>\n\n  //           <div className=\"flavor-text\">{description}</div>\n  //         </div>\n  //         <div className=\"section-box\" style={{ background: color }}>\n  //           {\" \"}\n  //           <span>Profile</span>\n  //         </div>\n  //         <div className=\"profile-info-box\">\n  //           <strong>Height:</strong>\n\n  //           <span>\n  //             {decimetersToCentimeters(information.height)}cm\n  //           </span>\n\n  //           <strong>Weight:</strong>\n\n  //           <span>\n  //             {hectogramsToPounds(information.weight)}kgs\n  //           </span>\n  //         </div>\n  //         <div className=\"profile-info-box\">\n  //           <strong>Abilities:</strong>\n\n  //           <span>{this.returnAbilityString()}</span>\n\n  //           <strong>Base Experience:</strong>\n\n  //           <span>{information.base_experience}</span>\n  //         </div>\n  //         <div className=\"section-box\" style={{ background: color }}>\n  //           {\" \"}\n  //           <span>Moves</span>\n  //         </div>\n  //         <div className=\"moves-box\">\n  //           <ul>\n  //             {moves.map(m => (\n  //               <div key={m.move.name}>\n  //                 <MoveCard name={m.move.name} url={m.move.url}></MoveCard>\n  //               </div>\n  //             ))}\n  //           </ul>\n  //         </div>\n  //         <br></br>\n  //       </div>\n  //       );\n  //     }\n  //   }\n  // }\n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(Fade, {\n    opposite: true,\n    top: true,\n    duration: 300,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokeinfo-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-information-background\",\n        id: \"pokemon-information-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-top\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-name\",\n            children: [\" \", initialInformation.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), information && initialInformation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"information-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokedexlights\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"./images/pokedexlight.png\"),\n              className: \"pokelight1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"./images/redlight.png\"),\n              className: \"pokelight2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"./images/yellowlight.png\"),\n              className: \"pokelight2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"./images/greenlight.png\"),\n              className: \"pokelight2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"#\", information ? information.id : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokeimage-window-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upperpanel-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"top-lights\",\n                src: require(\"./images/redlight.png\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"top-lights\",\n                src: require(\"./images/redlight.png\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pokeimage-screen\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pokeimage-screen_types\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"poketype\",\n                  style: {\n                    background: convertColor(initialInformation.types[0].type.name)\n                  },\n                  children: initialInformation.types[0].type.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this), initialInformation.types[1] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"poketype\",\n                  style: {\n                    background: convertColor(initialInformation.types[1].type.name)\n                  },\n                  children: initialInformation.types[1].type.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 24\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-gallery\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-left\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./images/left-scroll.png\"),\n                    onClick: navigateLeft\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-gallery_wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"image-gallery_background\",\n                    children: /*#__PURE__*/_jsxDEV(Fade, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"current-sprite\",\n                        src: currentSprite\n                      }, currentSprite, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gallery-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: require(\"./images/right-scroll.png\"),\n                    onClick: navigateRight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"generation-text\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: information.generation.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), information.flavor_text_entries[0] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flavor-text\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(TypeAnimation, {\n                    sequence: [\"> \" + information.flavor_text_entries.filter(e => e.language.name === 'en')[0].flavor_text],\n                    cursor: true,\n                    speed: 70\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 22\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"underscreen-decor\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"underscreen-light\",\n                src: require(\"./images/redlight.png\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"hamburger-decor\",\n                src: require(\"./images/hamburger.png\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"stat-label\",\n              children: \"Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"base-stat-wrapper\",\n            children: initialInformation.stats.map(s => /*#__PURE__*/_jsxDEV(StatBar, {\n              stat: s\n            }, s.stat.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 53\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"stat-label\",\n              children: \"Moves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"stat-label\",\n              children: \"Cocksize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"stat-label\",\n              children: \"Ballsize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"stat-label\",\n              children: \"Favorite Bomb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"return-link\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"return-button\",\n            type: \"submit\",\n            value: \"Return to Pok\\xE9dex\",\n            onClick: returnToPokedex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 8\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 8\n  }, this);\n};\n_s(PokemonInformation, \"nrHOC741i4+m5KS15QU3++C00fs=\");\n_c = PokemonInformation;\nexport default PokemonInformation;\nvar _c;\n$RefreshReg$(_c, \"PokemonInformation\");","map":{"version":3,"names":["React","Component","MoveCard","LoadingScreen","useHistory","useState","useEffect","Fade","TypeAnimation","StatBar","jsxDEV","_jsxDEV","Fragment","_Fragment","capitalize","s","charAt","toUpperCase","slice","convertColor","c","hectogramsToPounds","toFixed","decimetersToCentimeters","PokemonInformation","props","_s","initialInformation","setInitialInformation","setPokeinformation","information","setInformation","sprites","setSprites","spritesPos","setSpritesPos","currentSprite","setCurrentSprite","pokemonName","setPokemonName","idNum","setIdNum","moves","setMoves","abilities","setAbilities","description","setDescription","genus","setGenus","color","setColor","isLoaded","setIsLoaded","fetch","name","then","res","json","result","species","url","console","log","front_default","back_default","front_shiny","back_shiny","filter","e","returnToPokedex","closeFunction","returnAbilityString","length","ability","returnPokeTypes","navigateLeft","navigateRight","opposite","top","duration","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","src","require","style","background","types","type","onClick","generation","flavor_text_entries","sequence","language","flavor_text","cursor","speed","stats","map","stat","value","_c","$RefreshReg$"],"sources":["C:/Users/thorp/Desktop/web-dev/pokedexreact/pokedex-react/src/components/pokemoninformation.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./pokemoninformationstyles.css\";\r\nimport MoveCard from \"./movecard.js\";\r\nimport LoadingScreen from \"./loadingscreen\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { TypeAnimation } from \"react-type-animation\";\r\nimport StatBar from \"./statbar\";\r\n\r\nconst capitalize = s => {\r\n  if (typeof s !== \"string\") return \"\";\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst convertColor = c => {\r\n  if (c === \"normal\") {\r\n    return \"#A8A878\";\r\n  } else if (c === \"fighting\") {\r\n    return \"#C03028\";\r\n  } else if (c === \"flying\") {\r\n    return \"#A890F0\";\r\n  } else if (c === \"poison\") {\r\n    return \"#A040A0\";\r\n  } else if (c === \"ground\") {\r\n    return \"#E0C068\";\r\n  } else if (c === \"rock\") {\r\n    return \"#B8A038\";\r\n  } else if (c === \"bug\") {\r\n    return \"#A8B820\";\r\n  } else if (c === \"ghost\") {\r\n    return \"#705898\";\r\n  } else if (c === \"steel\") {\r\n    return \"#B8B8D0\";\r\n  } else if (c === \"fire\") {\r\n    return \"#F08030\";\r\n  } else if (c === \"water\") {\r\n    return \"#6890F0\";\r\n  } else if (c === \"grass\") {\r\n    return \"#78C850\";\r\n  } else if (c === \"electric\") {\r\n    return \"#F8D030\";\r\n  } else if (c === \"psychic\") {\r\n    return \"#F85888\";\r\n  } else if (c === \"ice\") {\r\n    return \"#98D8D8\";\r\n  } else if (c === \"dragon\") {\r\n    return \"#7038F8\";\r\n  } else if (c === \"dark\") {\r\n    return \"#705848\";\r\n  } else if (c === \"fairy\") {\r\n    return \"#EE99AC\";\r\n  } else if (c === \"???\") {\r\n    return \"#68A090\";\r\n  }\r\n};\r\n\r\nconst hectogramsToPounds = s => {\r\n  return (s / 10.0).toFixed(2);\r\n};\r\n\r\nconst decimetersToCentimeters = s => {\r\n  return s * 10.0;\r\n};\r\n\r\n// function NavToPrev(props) {\r\n//   let history = useHistory();\r\n\r\n//   function handleClick() {\r\n//     let n = props.currentNum - 1;\r\n\r\n//     if (n > 0) {\r\n//       history.push(\"/pokeinfo/\" + n);\r\n//       window.location.reload();\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <button\r\n//       className=\"previous-btn\"\r\n//       type=\"submit\"\r\n//       onClick={handleClick}\r\n//     ></button>\r\n//   );\r\n// }\r\n\r\n// function NavToNext(props) {\r\n//   let history = useHistory();\r\n\r\n//   function handleClick() {\r\n//     history.push(\"/pokeinfo/\" + (props.currentNum + 1));\r\n//     window.location.reload();\r\n//   }\r\n\r\n//   return (\r\n//     <button className=\"next-btn\" type=\"submit\" onClick={handleClick}></button>\r\n//   );\r\n// }\r\n\r\nconst PokemonInformation = (props) => {\r\n  // console.log(this.props.match.params);\r\n\r\n  // this.state = {\r\n  //   searchedName: this.props.match.params.name,\r\n  //   name: null,\r\n  //   idnum: null,\r\n  //   moves: null,\r\n  //   abilities: null,\r\n  //   description: null,\r\n  //   genus: null,\r\n  //   color: null,\r\n  //   allinformation: null,\r\n  //   isLoaded: false,\r\n  //   error: false\r\n  // };\r\n\r\n  const [initialInformation, setInitialInformation] = useState(props.setPokeinformation);\r\n  const [information, setInformation] = useState();\r\n  const [sprites, setSprites] = useState([]);\r\n  const [spritesPos, setSpritesPos] = useState(0);\r\n  const [currentSprite, setCurrentSprite] = useState(null);\r\n  const [pokemonName, setPokemonName] = useState(props.pokemonName);\r\n  const [idNum, setIdNum] = useState();\r\n  const [moves, setMoves] = useState();\r\n  const [abilities, setAbilities] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [genus, setGenus] = useState();\r\n  const [color, setColor] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + props.setPokeinformation.name)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        if (result)\r\n          fetch(result.species.url)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              setInformation(result);\r\n              console.log(result);\r\n              console.log(initialInformation)\r\n\r\n              {\r\n                // let flavorTextArray = result.flavor_text_entries;\r\n                // let n = 0;\r\n\r\n                // while (flavorTextArray[n].language.name !== \"en\") {\r\n                //   n++;\r\n                // }\r\n\r\n                // if (flavorTextArray[n].language.name === \"en\") {\r\n                //   setDescription(flavorTextArray[n].flavor_text);\r\n                // }\r\n\r\n                // let generaArray = result.genera;\r\n                // n = 0;\r\n\r\n                // while (generaArray[n].language.name !== \"en\") {\r\n                //   n++;\r\n                // }\r\n\r\n                // if (generaArray[n].language.name === \"en\") {\r\n                //   setGenus(generaArray[n].genus);\r\n                // }\r\n\r\n                // if (\r\n                //   result.color.name === \"white\" ||\r\n                //   result.color.name == \"yellow\"\r\n                // ) {\r\n                //   let types = information.types;\r\n\r\n                //   if (types.length >= 1) {\r\n                //     setColor(convertColor(types[0].type.name));\r\n                //   } else {\r\n                //     setColor(\"gray\");\r\n                //   }\r\n                // } else {\r\n                //   setColor(result.color.name);\r\n                // }\r\n              }\r\n            });\r\n      });\r\n\r\n    setSprites([initialInformation.sprites.front_default,\r\n    initialInformation.sprites.back_default,\r\n    initialInformation.sprites.front_shiny,\r\n    initialInformation.sprites.back_shiny].filter(e => e));\r\n    setCurrentSprite(initialInformation.sprites.front_default);\r\n\r\n    setIsLoaded(true);\r\n  }, []);\r\n\r\n  // const navToPrevious = () => {\r\n  //   if (parseInt(information.id, 10) - 1 > 0) {\r\n  //     /*\r\n  //     window.location.href =\r\n  //       \"/pokedex-react/#/pokeinfo/\" +\r\n  //       (parseInt(information.id, 10) - 1);\r\n  //     window.location.reload();\r\n  //     */\r\n  //   }\r\n  // }\r\n\r\n  // const navToNext = () => {\r\n  //   window.location.href =\r\n  //     \"/#/pokeinfo/\" + (parseInt(information.id, 10) + 1);\r\n  // }\r\n\r\n  const returnToPokedex = () => {\r\n    props.closeFunction();\r\n  }\r\n\r\n  const returnAbilityString = () => {\r\n    let abilities = information.abilities;\r\n\r\n    console.log(abilities);\r\n\r\n    if (abilities.length === 2) {\r\n      return (\r\n        capitalize(abilities[0].ability.name) +\r\n        \", \" +\r\n        capitalize(abilities[1].ability.name)\r\n      );\r\n    } else if (abilities.length === 1) {\r\n      return capitalize(abilities[0].ability.name);\r\n    } else {\r\n      return \"N/A\";\r\n    }\r\n  }\r\n\r\n  const returnPokeTypes = () => {\r\n    if (information) {\r\n      // if (information.)\r\n    }\r\n  }\r\n\r\n  const navigateLeft = () => {\r\n    if (spritesPos - 1 < 0) {\r\n      setCurrentSprite(sprites[sprites.length - 1]);\r\n      setSpritesPos(sprites.length - 1);\r\n    }\r\n    else {\r\n      setCurrentSprite(sprites[spritesPos - 1]);\r\n      setSpritesPos(spritesPos - 1);\r\n    }\r\n  }\r\n\r\n  const navigateRight = () => {\r\n    if (spritesPos + 1 > sprites.length - 1) {\r\n      setCurrentSprite(sprites[0]);\r\n      setSpritesPos(0);\r\n    }\r\n    else {\r\n      setCurrentSprite(sprites[spritesPos + 1]);\r\n      setSpritesPos(spritesPos + 1);\r\n    }\r\n  }\r\n\r\n  // const returnTypeBoxes = () => {\r\n  //   let types = information.types;\r\n\r\n  //   if (types.length === 2) {\r\n  //     var orientation = \"to left\";\r\n  //     var colorOne = convertColor(types[0].type.name);\r\n  //     var colorTwo = convertColor(types[1].type.name);\r\n\r\n  //     return (\r\n  //       <React.Fragment>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorOne,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[0].type.name}\r\n  //         </span>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorTwo,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[1].type.name}\r\n  //         </span>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   } else if (types.length === 1) {\r\n  //     var colorOne = convertColor(types[0].type.name);\r\n  //     return (\r\n  //       <React.Fragment>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorOne,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[0].type.name}\r\n  //         </span>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   } else {\r\n  //     return <span style={{ backgroundColor: convertColor(\"???\") }}>???</span>;\r\n  //   }\r\n  // }\r\n\r\n  // // const displayPrevButton = () => {\r\n  // //   if (idNum > 1) {\r\n  // //     return <NavToPrev currentNum={idNum}></NavToPrev>;\r\n  // //   } else {\r\n  // //     return null;\r\n  // //   }\r\n  // // }\r\n\r\n  // const displayPokemonSprites = () => {\r\n  //   if (information.sprites.front_shiny != null) {\r\n  //     return (\r\n  //       <div className=\"sprites\">\r\n  //         <div className=\"two-sprites\">\r\n  //           <div>\r\n  //             {\" \"}\r\n  //             <strong>Normal</strong>\r\n  //           </div>\r\n  //           <img src={information.sprites.front_default}></img>\r\n  //           <img src={information.sprites.back_default}></img>\r\n  //         </div>\r\n\r\n  //         <div className=\"two-sprites\">\r\n  //           <div>\r\n  //             <strong>Shiny</strong>\r\n  //           </div>\r\n  //           <img src={information.sprites.front_shiny}></img>\r\n  //           <img src={information.sprites.back_shiny}></img>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //   } else {\r\n  //     return (\r\n  //       <div className=\"sprites\">\r\n  //         <div className=\"one-sprite\">\r\n  //           <img src={information.sprites.front_default}></img>\r\n  //           <img src={information.sprites.back_default}></img>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // let showInformation = () => {\r\n\r\n  //   if (information) {\r\n  //     const allInformation = information;\r\n\r\n  //     console.log(allInformation.types);\r\n\r\n  //     let types = allInformation.types;\r\n  //     const bground = document.getElementById(\"pokemon-information-background\");\r\n\r\n  //     if (types.length === 2) {\r\n  //       var orientation = \"to left\";\r\n  //       var colorOne = convertColor(types[0].type.name);\r\n  //       var colorTwo = convertColor(types[1].type.name);\r\n\r\n  //       if (bground !== null) {\r\n  //         bground.style.background =\r\n  //           \"linear-gradient(\" +\r\n  //           orientation +\r\n  //           \", \" +\r\n  //           colorOne +\r\n  //           \", \" +\r\n  //           colorTwo +\r\n  //           \")\";\r\n  //       }\r\n  //     } else if (types.length === 1) {\r\n  //       if (bground !== null) {\r\n  //         bground.style.background = convertColor(\r\n  //           allInformation.types[0].type.name\r\n  //         );\r\n  //       }\r\n  //     } else {\r\n  //       if (bground !== null) {\r\n  //         bground.style.background = convertColor(\"???\");\r\n  //       }\r\n  //     }\r\n\r\n  //     if (isLoaded === true/* && error === false*/) {\r\n  //       return (<div className=\"pokeinfo\">\r\n  //         <div className=\"pokemon-idnum\">\r\n  //           <span>#{idNum}</span>\r\n  //         </div>\r\n  //         <div className=\"info-box\">\r\n  //           <div className=\"typeandstat-info\">\r\n  //             <div className=\"types\">{this.returnTypeBoxes()}</div>\r\n  //           </div>\r\n\r\n  //           {this.displayPokemonSprites()}\r\n  //         </div>\r\n  //         <div className=\"short-description\">\r\n  //           <div className=\"genus-text\">{genus}</div>\r\n\r\n  //           <div className=\"flavor-text\">{description}</div>\r\n  //         </div>\r\n  //         <div className=\"section-box\" style={{ background: color }}>\r\n  //           {\" \"}\r\n  //           <span>Profile</span>\r\n  //         </div>\r\n  //         <div className=\"profile-info-box\">\r\n  //           <strong>Height:</strong>\r\n\r\n  //           <span>\r\n  //             {decimetersToCentimeters(information.height)}cm\r\n  //           </span>\r\n\r\n  //           <strong>Weight:</strong>\r\n\r\n  //           <span>\r\n  //             {hectogramsToPounds(information.weight)}kgs\r\n  //           </span>\r\n  //         </div>\r\n  //         <div className=\"profile-info-box\">\r\n  //           <strong>Abilities:</strong>\r\n\r\n  //           <span>{this.returnAbilityString()}</span>\r\n\r\n  //           <strong>Base Experience:</strong>\r\n\r\n  //           <span>{information.base_experience}</span>\r\n  //         </div>\r\n  //         <div className=\"section-box\" style={{ background: color }}>\r\n  //           {\" \"}\r\n  //           <span>Moves</span>\r\n  //         </div>\r\n  //         <div className=\"moves-box\">\r\n  //           <ul>\r\n  //             {moves.map(m => (\r\n  //               <div key={m.move.name}>\r\n  //                 <MoveCard name={m.move.name} url={m.move.url}></MoveCard>\r\n  //               </div>\r\n  //             ))}\r\n  //           </ul>\r\n  //         </div>\r\n  //         <br></br>\r\n  //       </div>\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    isLoaded ?\r\n      (<Fade opposite top duration={300}>\r\n        <div className=\"pokeinfo-wrapper\">\r\n          <div\r\n            className=\"pokemon-information-background\"\r\n            id=\"pokemon-information-background\"\r\n          >\r\n            <div className=\"navbar-top\">\r\n              <div className=\"pokemon-name\"> {initialInformation.name}</div>\r\n              {/* {this.displayPrevButton()} */}\r\n              {/* <NavToNext currentNum={idNum}></NavToNext> */}\r\n            </div>\r\n            {/* {showInformation()} */}\r\n\r\n            {information && initialInformation ? (<div className=\"information-form\">\r\n              <div className=\"pokedexlights\">\r\n                <img src={require(\"./images/pokedexlight.png\")} className=\"pokelight1\" />\r\n                <img src={require(\"./images/redlight.png\")} className=\"pokelight2\" />\r\n                <img src={require(\"./images/yellowlight.png\")} className=\"pokelight2\" />\r\n                <img src={require(\"./images/greenlight.png\")} className=\"pokelight2\" />\r\n                <hr></hr>\r\n                <label>#{information ? information.id : null}</label>\r\n                <hr></hr>\r\n              </div>\r\n              <div className=\"pokeimage-window-panel\">\r\n                <div className=\"upperpanel-wrapper\">\r\n                  <img className='top-lights' src={require(\"./images/redlight.png\")} />\r\n                  <img className='top-lights' src={require(\"./images/redlight.png\")} />\r\n                </div>\r\n\r\n                <div className=\"pokeimage-screen\">\r\n                  <div className=\"pokeimage-screen_types\">\r\n                    <div className=\"poketype\" style={{ background: convertColor(initialInformation.types[0].type.name) }}>\r\n                      {initialInformation.types[0].type.name}\r\n                    </div>\r\n                    {initialInformation.types[1] ?\r\n                      (<div className=\"poketype\" style={{ background: convertColor(initialInformation.types[1].type.name) }}>\r\n                        {initialInformation.types[1].type.name}\r\n                      </div>) : (<></>)}\r\n                  </div>\r\n\r\n                  {/* Image gallery */}\r\n                  <div className=\"image-gallery\">\r\n                    <div className=\"gallery-left\">\r\n                      <img src={require(\"./images/left-scroll.png\")} onClick={navigateLeft}></img>\r\n                    </div>\r\n                    <div className=\"image-gallery_wrapper\">\r\n                      <div className=\"image-gallery_background\">\r\n                        <Fade>\r\n                          <img key={currentSprite} className=\"current-sprite\" src={currentSprite}>\r\n                          </img>\r\n                        </Fade>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"gallery-right\">\r\n                      <img src={require(\"./images/right-scroll.png\")} onClick={navigateRight}></img>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"generation-text\">\r\n                    <label>\r\n                      {information.generation.name}\r\n                    </label>\r\n                  </div>\r\n\r\n                  {/* Flavor Text */}\r\n                  {information.flavor_text_entries[0] ?\r\n                    (<div className=\"flavor-text\">\r\n                      <label>\r\n                        <TypeAnimation sequence={[\"> \" + information.flavor_text_entries.filter(e => e.language.name === 'en')[0].flavor_text]} cursor={true} speed={70} />\r\n                      </label>\r\n                    </div>) : null}\r\n\r\n                </div>\r\n                {/* Posture */}\r\n\r\n                <div className=\"underscreen-decor\">\r\n                  <img className=\"underscreen-light\" src={require(\"./images/redlight.png\")} />\r\n                  <img className=\"hamburger-decor\" src={require(\"./images/hamburger.png\")} />\r\n                </div>\r\n\r\n              </div>\r\n              {/* Stat bars */}\r\n              <div className=\"stats-label\">\r\n                {/* <hr></hr> */}\r\n                <label className=\"stat-label\">Stats</label>\r\n                <hr></hr>\r\n              </div>\r\n              <div className=\"base-stat-wrapper\">\r\n                {initialInformation.stats.map(s => (<StatBar key={s.stat.name} stat={s} />))}\r\n              </div>\r\n\r\n              {/* Moves */}\r\n              <div className=\"stats-label\">\r\n                {/* <hr></hr> */}\r\n                <label className=\"stat-label\">Moves</label>\r\n                <hr></hr>\r\n              </div>\r\n\r\n              <div className=\"stats-label\">\r\n                {/* <hr></hr> */}\r\n                <label className=\"stat-label\">Cocksize</label>\r\n                <hr></hr>\r\n              </div>\r\n\r\n              <div className=\"stats-label\">\r\n                {/* <hr></hr> */}\r\n                <label className=\"stat-label\">Ballsize</label>\r\n                <hr></hr>\r\n              </div>\r\n\r\n              <div className=\"stats-label\">\r\n                {/* <hr></hr> */}\r\n                <label className=\"stat-label\">Favorite Bomb</label>\r\n                <hr></hr>\r\n              </div>\r\n            </div>) : (<LoadingScreen />)}\r\n\r\n            <div className=\"return-link\">\r\n              <input\r\n                className=\"return-button\"\r\n                type=\"submit\"\r\n                value=\"Return to Pokédex\"\r\n                onClick={returnToPokedex}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade >)\r\n      :\r\n      (<LoadingScreen />)\r\n  );\r\n}\r\nexport default PokemonInformation;\r\n"],"mappings":"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AAO,CAACE,UAAU,GAAG,CAAC,CAAC,CAAC;MACzCC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAM2C,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI3C,UAAU,GAAG,CAAC,GAAGF,OAAO,CAACyC,MAAM,GAAG,CAAC,EAAE;MACvCpC,gBAAgB,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC;MAC5BG,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,MACI;MACHE,gBAAgB,CAACL,OAAO,CAACE,UAAU,GAAG,CAAC,CAAC,CAAC;MACzCC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;;EAED;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}