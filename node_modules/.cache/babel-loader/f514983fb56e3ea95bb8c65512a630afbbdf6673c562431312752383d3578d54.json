{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thorp\\\\Desktop\\\\web-dev\\\\pokedexreact\\\\pokedex-react\\\\src\\\\components\\\\pokemoninformation.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from \"react\";\nimport \"./pokemoninformationstyles.css\";\nimport MoveCard from \"./movecard.js\";\nimport LoadingScreen from \"./loadingscreen\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Fade } from \"react-reveal\";\nconst capitalize = s => {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\nconst convertColor = c => {\n  if (c === \"normal\") {\n    return \"#A8A878\";\n  } else if (c === \"fighting\") {\n    return \"#C03028\";\n  } else if (c === \"flying\") {\n    return \"#A890F0\";\n  } else if (c === \"poison\") {\n    return \"#A040A0\";\n  } else if (c === \"ground\") {\n    return \"#E0C068\";\n  } else if (c === \"rock\") {\n    return \"#B8A038\";\n  } else if (c === \"bug\") {\n    return \"#A8B820\";\n  } else if (c === \"ghost\") {\n    return \"#705898\";\n  } else if (c === \"steel\") {\n    return \"#B8B8D0\";\n  } else if (c === \"fire\") {\n    return \"#F08030\";\n  } else if (c === \"water\") {\n    return \"#6890F0\";\n  } else if (c === \"grass\") {\n    return \"#78C850\";\n  } else if (c === \"electric\") {\n    return \"#F8D030\";\n  } else if (c === \"psychic\") {\n    return \"#F85888\";\n  } else if (c === \"ice\") {\n    return \"#98D8D8\";\n  } else if (c === \"dragon\") {\n    return \"#7038F8\";\n  } else if (c === \"dark\") {\n    return \"#705848\";\n  } else if (c === \"fairy\") {\n    return \"#EE99AC\";\n  } else if (c === \"???\") {\n    return \"#68A090\";\n  }\n};\nconst hectogramsToPounds = s => {\n  return (s / 10.0).toFixed(2);\n};\nconst decimetersToCentimeters = s => {\n  return s * 10.0;\n};\n\n// function NavToPrev(props) {\n//   let history = useHistory();\n\n//   function handleClick() {\n//     let n = props.currentNum - 1;\n\n//     if (n > 0) {\n//       history.push(\"/pokeinfo/\" + n);\n//       window.location.reload();\n//     }\n//   }\n\n//   return (\n//     <button\n//       className=\"previous-btn\"\n//       type=\"submit\"\n//       onClick={handleClick}\n//     ></button>\n//   );\n// }\n\n// function NavToNext(props) {\n//   let history = useHistory();\n\n//   function handleClick() {\n//     history.push(\"/pokeinfo/\" + (props.currentNum + 1));\n//     window.location.reload();\n//   }\n\n//   return (\n//     <button className=\"next-btn\" type=\"submit\" onClick={handleClick}></button>\n//   );\n// }\n\nconst PokemonInformation = props => {\n  _s();\n  // console.log(this.props.match.params);\n\n  // this.state = {\n  //   searchedName: this.props.match.params.name,\n  //   name: null,\n  //   idnum: null,\n  //   moves: null,\n  //   abilities: null,\n  //   description: null,\n  //   genus: null,\n  //   color: null,\n  //   allinformation: null,\n  //   isLoaded: false,\n  //   error: false\n  // };\n\n  const [information, setInformation] = useState();\n  const [pokemonName, setPokemonName] = useState(props.pokemonName);\n  const [idNum, setIdNum] = useState();\n  const [moves, setMoves] = useState();\n  const [abilities, setAbilities] = useState();\n  const [description, setDescription] = useState();\n  const [genus, setGenus] = useState();\n  const [color, setColor] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName).then(res => res.json()).then(result => {\n      if (information) console.log(information);\n      fetch(information.species.url).then(res => res.json()).then(result => {\n        let flavorTextArray = result.flavor_text_entries;\n        let n = 0;\n        while (flavorTextArray[n].language.name !== \"en\") {\n          n++;\n        }\n        if (flavorTextArray[n].language.name === \"en\") {\n          setDescription(flavorTextArray[n].flavor_text);\n        }\n        let generaArray = result.genera;\n        n = 0;\n        while (generaArray[n].language.name !== \"en\") {\n          n++;\n        }\n        if (generaArray[n].language.name === \"en\") {\n          setGenus(generaArray[n].genus);\n        }\n        if (result.color.name === \"white\" || result.color.name == \"yellow\") {\n          let types = information.types;\n          if (types.length >= 1) {\n            setColor(convertColor(types[0].type.name));\n          } else {\n            setColor(\"gray\");\n          }\n        } else {\n          setColor(result.color.name);\n        }\n      });\n    });\n    setIsLoaded(true);\n  }, null);\n\n  // const navToPrevious = () => {\n  //   if (parseInt(information.id, 10) - 1 > 0) {\n  //     /*\n  //     window.location.href =\n  //       \"/pokedex-react/#/pokeinfo/\" +\n  //       (parseInt(information.id, 10) - 1);\n  //     window.location.reload();\n  //     */\n  //   }\n  // }\n\n  // const navToNext = () => {\n  //   window.location.href =\n  //     \"/#/pokeinfo/\" + (parseInt(information.id, 10) + 1);\n  // }\n\n  const returnToPokedex = () => {\n    props.closeFunction();\n  };\n  const returnAbilityString = () => {\n    let abilities = information.abilities;\n    console.log(abilities);\n    if (abilities.length === 2) {\n      return capitalize(abilities[0].ability.name) + \", \" + capitalize(abilities[1].ability.name);\n    } else if (abilities.length === 1) {\n      return capitalize(abilities[0].ability.name);\n    } else {\n      return \"N/A\";\n    }\n  };\n\n  // const returnTypeBoxes = () => {\n  //   let types = information.types;\n\n  //   if (types.length === 2) {\n  //     var orientation = \"to left\";\n  //     var colorOne = convertColor(types[0].type.name);\n  //     var colorTwo = convertColor(types[1].type.name);\n\n  //     return (\n  //       <React.Fragment>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorOne,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[0].type.name}\n  //         </span>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorTwo,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[1].type.name}\n  //         </span>\n  //       </React.Fragment>\n  //     );\n  //   } else if (types.length === 1) {\n  //     var colorOne = convertColor(types[0].type.name);\n  //     return (\n  //       <React.Fragment>\n  //         <span\n  //           style={{\n  //             backgroundColor: colorOne,\n  //             textTransform: \"uppercase\",\n  //             margin: \"5px\",\n  //             padding: \"2px 10px 2px 10px\"\n  //           }}\n  //         >\n  //           {types[0].type.name}\n  //         </span>\n  //       </React.Fragment>\n  //     );\n  //   } else {\n  //     return <span style={{ backgroundColor: convertColor(\"???\") }}>???</span>;\n  //   }\n  // }\n\n  // // const displayPrevButton = () => {\n  // //   if (idNum > 1) {\n  // //     return <NavToPrev currentNum={idNum}></NavToPrev>;\n  // //   } else {\n  // //     return null;\n  // //   }\n  // // }\n\n  // const displayPokemonSprites = () => {\n  //   if (information.sprites.front_shiny != null) {\n  //     return (\n  //       <div className=\"sprites\">\n  //         <div className=\"two-sprites\">\n  //           <div>\n  //             {\" \"}\n  //             <strong>Normal</strong>\n  //           </div>\n  //           <img src={information.sprites.front_default}></img>\n  //           <img src={information.sprites.back_default}></img>\n  //         </div>\n\n  //         <div className=\"two-sprites\">\n  //           <div>\n  //             <strong>Shiny</strong>\n  //           </div>\n  //           <img src={information.sprites.front_shiny}></img>\n  //           <img src={information.sprites.back_shiny}></img>\n  //         </div>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div className=\"sprites\">\n  //         <div className=\"one-sprite\">\n  //           <img src={information.sprites.front_default}></img>\n  //           <img src={information.sprites.back_default}></img>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n  // let showInformation = () => {\n\n  //   if (information) {\n  //     const allInformation = information;\n\n  //     console.log(allInformation.types);\n\n  //     let types = allInformation.types;\n  //     const bground = document.getElementById(\"pokemon-information-background\");\n\n  //     if (types.length === 2) {\n  //       var orientation = \"to left\";\n  //       var colorOne = convertColor(types[0].type.name);\n  //       var colorTwo = convertColor(types[1].type.name);\n\n  //       if (bground !== null) {\n  //         bground.style.background =\n  //           \"linear-gradient(\" +\n  //           orientation +\n  //           \", \" +\n  //           colorOne +\n  //           \", \" +\n  //           colorTwo +\n  //           \")\";\n  //       }\n  //     } else if (types.length === 1) {\n  //       if (bground !== null) {\n  //         bground.style.background = convertColor(\n  //           allInformation.types[0].type.name\n  //         );\n  //       }\n  //     } else {\n  //       if (bground !== null) {\n  //         bground.style.background = convertColor(\"???\");\n  //       }\n  //     }\n\n  //     if (isLoaded === true/* && error === false*/) {\n  //       return (<div className=\"pokeinfo\">\n  //         <div className=\"pokemon-idnum\">\n  //           <span>#{idNum}</span>\n  //         </div>\n  //         <div className=\"info-box\">\n  //           <div className=\"typeandstat-info\">\n  //             <div className=\"types\">{this.returnTypeBoxes()}</div>\n  //           </div>\n\n  //           {this.displayPokemonSprites()}\n  //         </div>\n  //         <div className=\"short-description\">\n  //           <div className=\"genus-text\">{genus}</div>\n\n  //           <div className=\"flavor-text\">{description}</div>\n  //         </div>\n  //         <div className=\"section-box\" style={{ background: color }}>\n  //           {\" \"}\n  //           <span>Profile</span>\n  //         </div>\n  //         <div className=\"profile-info-box\">\n  //           <strong>Height:</strong>\n\n  //           <span>\n  //             {decimetersToCentimeters(information.height)}cm\n  //           </span>\n\n  //           <strong>Weight:</strong>\n\n  //           <span>\n  //             {hectogramsToPounds(information.weight)}kgs\n  //           </span>\n  //         </div>\n  //         <div className=\"profile-info-box\">\n  //           <strong>Abilities:</strong>\n\n  //           <span>{this.returnAbilityString()}</span>\n\n  //           <strong>Base Experience:</strong>\n\n  //           <span>{information.base_experience}</span>\n  //         </div>\n  //         <div className=\"section-box\" style={{ background: color }}>\n  //           {\" \"}\n  //           <span>Moves</span>\n  //         </div>\n  //         <div className=\"moves-box\">\n  //           <ul>\n  //             {moves.map(m => (\n  //               <div key={m.move.name}>\n  //                 <MoveCard name={m.move.name} url={m.move.url}></MoveCard>\n  //               </div>\n  //             ))}\n  //           </ul>\n  //         </div>\n  //         <br></br>\n  //       </div>\n  //       );\n  //     }\n  //   }\n  // }\n\n  return isLoaded ? /*#__PURE__*/React.createElement(Fade, {\n    opposite: true,\n    top: true,\n    duration: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokeinfo-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokemon-information-background\",\n    id: \"pokemon-information-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokemon-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \" \", pokemonName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokedexlights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/pokedexlight.png\"),\n    className: \"pokelight1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/redlight.png\"),\n    className: \"pokelight2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/yellowlight.png\"),\n    className: \"pokelight2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/greenlight.png\"),\n    className: \"pokelight2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, information), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokeimage-window-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upperpanel-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/redlight.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"./images/redlight.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pokeimage-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"underscreen-decor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"underscreen-light\",\n    src: require(\"./images/redlight.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"hamburger-decor\",\n    src: require(\"./images/hamburger.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"return-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"return-button\",\n    type: \"submit\",\n    value: \"Return to Pok\\xE9dex\",\n    onClick: returnToPokedex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }))))) : /*#__PURE__*/React.createElement(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 8\n    }\n  });\n};\n_s(PokemonInformation, \"tvLsXuBIKL3TSFwtefltNcG8+LI=\");\n_c = PokemonInformation;\nexport default PokemonInformation;\nvar _c;\n$RefreshReg$(_c, \"PokemonInformation\");","map":{"version":3,"names":["React","Component","MoveCard","LoadingScreen","useHistory","useState","useEffect","Fade","capitalize","s","charAt","toUpperCase","slice","convertColor","c","hectogramsToPounds","toFixed","decimetersToCentimeters","PokemonInformation","props","_s","information","setInformation","pokemonName","setPokemonName","idNum","setIdNum","moves","setMoves","abilities","setAbilities","description","setDescription","genus","setGenus","color","setColor","isLoaded","setIsLoaded","fetch","then","res","json","result","console","log","species","url","flavorTextArray","flavor_text_entries","n","language","name","flavor_text","generaArray","genera","types","length","type","returnToPokedex","closeFunction","returnAbilityString","ability","createElement","opposite","top","duration","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","src","require","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thorp/Desktop/web-dev/pokedexreact/pokedex-react/src/components/pokemoninformation.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./pokemoninformationstyles.css\";\r\nimport MoveCard from \"./movecard.js\";\r\nimport LoadingScreen from \"./loadingscreen\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Fade } from \"react-reveal\";\r\n\r\nconst capitalize = s => {\r\n  if (typeof s !== \"string\") return \"\";\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst convertColor = c => {\r\n  if (c === \"normal\") {\r\n    return \"#A8A878\";\r\n  } else if (c === \"fighting\") {\r\n    return \"#C03028\";\r\n  } else if (c === \"flying\") {\r\n    return \"#A890F0\";\r\n  } else if (c === \"poison\") {\r\n    return \"#A040A0\";\r\n  } else if (c === \"ground\") {\r\n    return \"#E0C068\";\r\n  } else if (c === \"rock\") {\r\n    return \"#B8A038\";\r\n  } else if (c === \"bug\") {\r\n    return \"#A8B820\";\r\n  } else if (c === \"ghost\") {\r\n    return \"#705898\";\r\n  } else if (c === \"steel\") {\r\n    return \"#B8B8D0\";\r\n  } else if (c === \"fire\") {\r\n    return \"#F08030\";\r\n  } else if (c === \"water\") {\r\n    return \"#6890F0\";\r\n  } else if (c === \"grass\") {\r\n    return \"#78C850\";\r\n  } else if (c === \"electric\") {\r\n    return \"#F8D030\";\r\n  } else if (c === \"psychic\") {\r\n    return \"#F85888\";\r\n  } else if (c === \"ice\") {\r\n    return \"#98D8D8\";\r\n  } else if (c === \"dragon\") {\r\n    return \"#7038F8\";\r\n  } else if (c === \"dark\") {\r\n    return \"#705848\";\r\n  } else if (c === \"fairy\") {\r\n    return \"#EE99AC\";\r\n  } else if (c === \"???\") {\r\n    return \"#68A090\";\r\n  }\r\n};\r\n\r\nconst hectogramsToPounds = s => {\r\n  return (s / 10.0).toFixed(2);\r\n};\r\n\r\nconst decimetersToCentimeters = s => {\r\n  return s * 10.0;\r\n};\r\n\r\n// function NavToPrev(props) {\r\n//   let history = useHistory();\r\n\r\n//   function handleClick() {\r\n//     let n = props.currentNum - 1;\r\n\r\n//     if (n > 0) {\r\n//       history.push(\"/pokeinfo/\" + n);\r\n//       window.location.reload();\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <button\r\n//       className=\"previous-btn\"\r\n//       type=\"submit\"\r\n//       onClick={handleClick}\r\n//     ></button>\r\n//   );\r\n// }\r\n\r\n// function NavToNext(props) {\r\n//   let history = useHistory();\r\n\r\n//   function handleClick() {\r\n//     history.push(\"/pokeinfo/\" + (props.currentNum + 1));\r\n//     window.location.reload();\r\n//   }\r\n\r\n//   return (\r\n//     <button className=\"next-btn\" type=\"submit\" onClick={handleClick}></button>\r\n//   );\r\n// }\r\n\r\nconst PokemonInformation = (props) => {\r\n  // console.log(this.props.match.params);\r\n\r\n  // this.state = {\r\n  //   searchedName: this.props.match.params.name,\r\n  //   name: null,\r\n  //   idnum: null,\r\n  //   moves: null,\r\n  //   abilities: null,\r\n  //   description: null,\r\n  //   genus: null,\r\n  //   color: null,\r\n  //   allinformation: null,\r\n  //   isLoaded: false,\r\n  //   error: false\r\n  // };\r\n\r\n  const [information, setInformation] = useState();\r\n  const [pokemonName, setPokemonName] = useState(props.pokemonName);\r\n  const [idNum, setIdNum] = useState();\r\n  const [moves, setMoves] = useState();\r\n  const [abilities, setAbilities] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [genus, setGenus] = useState();\r\n  const [color, setColor] = useState();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + pokemonName)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        if (information)\r\n          console.log(information);\r\n        fetch(information.species.url)\r\n          .then(res => res.json())\r\n          .then(result => {\r\n            let flavorTextArray = result.flavor_text_entries;\r\n            let n = 0;\r\n\r\n            while (flavorTextArray[n].language.name !== \"en\") {\r\n              n++;\r\n            }\r\n\r\n            if (flavorTextArray[n].language.name === \"en\") {\r\n              setDescription(flavorTextArray[n].flavor_text);\r\n            }\r\n\r\n            let generaArray = result.genera;\r\n            n = 0;\r\n\r\n            while (generaArray[n].language.name !== \"en\") {\r\n              n++;\r\n            }\r\n\r\n            if (generaArray[n].language.name === \"en\") {\r\n              setGenus(generaArray[n].genus);\r\n            }\r\n\r\n            if (\r\n              result.color.name === \"white\" ||\r\n              result.color.name == \"yellow\"\r\n            ) {\r\n              let types = information.types;\r\n\r\n              if (types.length >= 1) {\r\n                setColor(convertColor(types[0].type.name));\r\n              } else {\r\n                setColor(\"gray\");\r\n              }\r\n            } else {\r\n              setColor(result.color.name);\r\n            }\r\n          });\r\n      });\r\n\r\n    setIsLoaded(true);\r\n  }, null);\r\n\r\n  // const navToPrevious = () => {\r\n  //   if (parseInt(information.id, 10) - 1 > 0) {\r\n  //     /*\r\n  //     window.location.href =\r\n  //       \"/pokedex-react/#/pokeinfo/\" +\r\n  //       (parseInt(information.id, 10) - 1);\r\n  //     window.location.reload();\r\n  //     */\r\n  //   }\r\n  // }\r\n\r\n  // const navToNext = () => {\r\n  //   window.location.href =\r\n  //     \"/#/pokeinfo/\" + (parseInt(information.id, 10) + 1);\r\n  // }\r\n\r\n  const returnToPokedex = () => {\r\n    props.closeFunction();\r\n  }\r\n\r\n  const returnAbilityString = () => {\r\n    let abilities = information.abilities;\r\n\r\n    console.log(abilities);\r\n\r\n    if (abilities.length === 2) {\r\n      return (\r\n        capitalize(abilities[0].ability.name) +\r\n        \", \" +\r\n        capitalize(abilities[1].ability.name)\r\n      );\r\n    } else if (abilities.length === 1) {\r\n      return capitalize(abilities[0].ability.name);\r\n    } else {\r\n      return \"N/A\";\r\n    }\r\n  }\r\n\r\n  // const returnTypeBoxes = () => {\r\n  //   let types = information.types;\r\n\r\n  //   if (types.length === 2) {\r\n  //     var orientation = \"to left\";\r\n  //     var colorOne = convertColor(types[0].type.name);\r\n  //     var colorTwo = convertColor(types[1].type.name);\r\n\r\n  //     return (\r\n  //       <React.Fragment>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorOne,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[0].type.name}\r\n  //         </span>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorTwo,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[1].type.name}\r\n  //         </span>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   } else if (types.length === 1) {\r\n  //     var colorOne = convertColor(types[0].type.name);\r\n  //     return (\r\n  //       <React.Fragment>\r\n  //         <span\r\n  //           style={{\r\n  //             backgroundColor: colorOne,\r\n  //             textTransform: \"uppercase\",\r\n  //             margin: \"5px\",\r\n  //             padding: \"2px 10px 2px 10px\"\r\n  //           }}\r\n  //         >\r\n  //           {types[0].type.name}\r\n  //         </span>\r\n  //       </React.Fragment>\r\n  //     );\r\n  //   } else {\r\n  //     return <span style={{ backgroundColor: convertColor(\"???\") }}>???</span>;\r\n  //   }\r\n  // }\r\n\r\n  // // const displayPrevButton = () => {\r\n  // //   if (idNum > 1) {\r\n  // //     return <NavToPrev currentNum={idNum}></NavToPrev>;\r\n  // //   } else {\r\n  // //     return null;\r\n  // //   }\r\n  // // }\r\n\r\n  // const displayPokemonSprites = () => {\r\n  //   if (information.sprites.front_shiny != null) {\r\n  //     return (\r\n  //       <div className=\"sprites\">\r\n  //         <div className=\"two-sprites\">\r\n  //           <div>\r\n  //             {\" \"}\r\n  //             <strong>Normal</strong>\r\n  //           </div>\r\n  //           <img src={information.sprites.front_default}></img>\r\n  //           <img src={information.sprites.back_default}></img>\r\n  //         </div>\r\n\r\n  //         <div className=\"two-sprites\">\r\n  //           <div>\r\n  //             <strong>Shiny</strong>\r\n  //           </div>\r\n  //           <img src={information.sprites.front_shiny}></img>\r\n  //           <img src={information.sprites.back_shiny}></img>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //   } else {\r\n  //     return (\r\n  //       <div className=\"sprites\">\r\n  //         <div className=\"one-sprite\">\r\n  //           <img src={information.sprites.front_default}></img>\r\n  //           <img src={information.sprites.back_default}></img>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  // let showInformation = () => {\r\n\r\n  //   if (information) {\r\n  //     const allInformation = information;\r\n\r\n  //     console.log(allInformation.types);\r\n\r\n  //     let types = allInformation.types;\r\n  //     const bground = document.getElementById(\"pokemon-information-background\");\r\n\r\n  //     if (types.length === 2) {\r\n  //       var orientation = \"to left\";\r\n  //       var colorOne = convertColor(types[0].type.name);\r\n  //       var colorTwo = convertColor(types[1].type.name);\r\n\r\n  //       if (bground !== null) {\r\n  //         bground.style.background =\r\n  //           \"linear-gradient(\" +\r\n  //           orientation +\r\n  //           \", \" +\r\n  //           colorOne +\r\n  //           \", \" +\r\n  //           colorTwo +\r\n  //           \")\";\r\n  //       }\r\n  //     } else if (types.length === 1) {\r\n  //       if (bground !== null) {\r\n  //         bground.style.background = convertColor(\r\n  //           allInformation.types[0].type.name\r\n  //         );\r\n  //       }\r\n  //     } else {\r\n  //       if (bground !== null) {\r\n  //         bground.style.background = convertColor(\"???\");\r\n  //       }\r\n  //     }\r\n\r\n  //     if (isLoaded === true/* && error === false*/) {\r\n  //       return (<div className=\"pokeinfo\">\r\n  //         <div className=\"pokemon-idnum\">\r\n  //           <span>#{idNum}</span>\r\n  //         </div>\r\n  //         <div className=\"info-box\">\r\n  //           <div className=\"typeandstat-info\">\r\n  //             <div className=\"types\">{this.returnTypeBoxes()}</div>\r\n  //           </div>\r\n\r\n  //           {this.displayPokemonSprites()}\r\n  //         </div>\r\n  //         <div className=\"short-description\">\r\n  //           <div className=\"genus-text\">{genus}</div>\r\n\r\n  //           <div className=\"flavor-text\">{description}</div>\r\n  //         </div>\r\n  //         <div className=\"section-box\" style={{ background: color }}>\r\n  //           {\" \"}\r\n  //           <span>Profile</span>\r\n  //         </div>\r\n  //         <div className=\"profile-info-box\">\r\n  //           <strong>Height:</strong>\r\n\r\n  //           <span>\r\n  //             {decimetersToCentimeters(information.height)}cm\r\n  //           </span>\r\n\r\n  //           <strong>Weight:</strong>\r\n\r\n  //           <span>\r\n  //             {hectogramsToPounds(information.weight)}kgs\r\n  //           </span>\r\n  //         </div>\r\n  //         <div className=\"profile-info-box\">\r\n  //           <strong>Abilities:</strong>\r\n\r\n  //           <span>{this.returnAbilityString()}</span>\r\n\r\n  //           <strong>Base Experience:</strong>\r\n\r\n  //           <span>{information.base_experience}</span>\r\n  //         </div>\r\n  //         <div className=\"section-box\" style={{ background: color }}>\r\n  //           {\" \"}\r\n  //           <span>Moves</span>\r\n  //         </div>\r\n  //         <div className=\"moves-box\">\r\n  //           <ul>\r\n  //             {moves.map(m => (\r\n  //               <div key={m.move.name}>\r\n  //                 <MoveCard name={m.move.name} url={m.move.url}></MoveCard>\r\n  //               </div>\r\n  //             ))}\r\n  //           </ul>\r\n  //         </div>\r\n  //         <br></br>\r\n  //       </div>\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    isLoaded ?\r\n      (<Fade opposite top duration={300}>\r\n        <div className=\"pokeinfo-wrapper\">\r\n          <div\r\n            className=\"pokemon-information-background\"\r\n            id=\"pokemon-information-background\"\r\n          >\r\n            <div className=\"navbar-top\">\r\n              <div className=\"pokemon-name\"> {pokemonName}</div>\r\n              {/* {this.displayPrevButton()} */}\r\n              {/* <NavToNext currentNum={idNum}></NavToNext> */}\r\n            </div>\r\n            {/* {showInformation()} */}\r\n\r\n            <div className=\"information-form\">\r\n              <div className=\"pokedexlights\">\r\n                <img src={require(\"./images/pokedexlight.png\")} className=\"pokelight1\" />\r\n                <img src={require(\"./images/redlight.png\")} className=\"pokelight2\" />\r\n                <img src={require(\"./images/yellowlight.png\")} className=\"pokelight2\" />\r\n                <img src={require(\"./images/greenlight.png\")} className=\"pokelight2\" />\r\n                <hr></hr>\r\n                <label>{information}</label>\r\n                <hr></hr>\r\n              </div>\r\n              <div className=\"pokeimage-window-panel\">\r\n                <div className=\"upperpanel-wrapper\">\r\n                  <img src={require(\"./images/redlight.png\")} />\r\n                  <img src={require(\"./images/redlight.png\")} />\r\n                </div>\r\n\r\n                <div className=\"pokeimage-screen\">\r\n\r\n                </div>\r\n\r\n                <div className=\"underscreen-decor\">\r\n                  <img className=\"underscreen-light\" src={require(\"./images/redlight.png\")} />\r\n                  <img className=\"hamburger-decor\" src={require(\"./images/hamburger.png\")} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"return-link\">\r\n              <input\r\n                className=\"return-button\"\r\n                type=\"submit\"\r\n                value=\"Return to Pokédex\"\r\n                onClick={returnToPokedex}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>)\r\n      :\r\n      (<LoadingScreen></LoadingScreen>)\r\n  );\r\n}\r\nexport default PokemonInformation;\r\n"],"mappings":"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;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OACEf,QAAQ,gBACLrC,KAAA,CAAA+D,aAAA,CAACxD,IAAI;IAACyD,QAAQ;IAACC,GAAG;IAACC,QAAQ,EAAE,GAAI;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCxE,KAAA,CAAA+D,aAAA;IAAKU,SAAS,EAAC,kBAAkB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BxE,KAAA,CAAA+D,aAAA;IACEU,SAAS,EAAC,gCAAgC;IAC1CC,EAAE,EAAC,gCAAgC;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEnCxE,KAAA,CAAA+D,aAAA;IAAKU,SAAS,EAAC,YAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB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"},"metadata":{},"sourceType":"module","externalDependencies":[]}